name: deploy-backend

on:
  push:
    branches: [ main ]              # auto deploy on push to main

concurrency:
  group: deploy-backend
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.4'

      # Stage a clean "artifacts" folder whose ROOT will be wwwroot.
      - name: Stage backend into flat artifacts root
        run: |
          rm -rf artifacts
          mkdir -p artifacts
          # Flatten server.js and package manifests to artifacts root
          cp backend/server.js artifacts/server.js
          if [ -f backend/package.json ]; then 
            # Remove postinstall script that causes npm ci issues
            jq 'del(.scripts.postinstall)' backend/package.json > artifacts/package.json
          fi
          if [ -f backend/package-lock.json ]; then cp backend/package-lock.json artifacts/package-lock.json; fi
          # Bring express-ingest under artifacts/express-ingest exactly
          rsync -a backend/express-ingest/ artifacts/express-ingest/ 2>/dev/null || true

      # Install root runtime deps (express, etc.) at artifacts root
      - name: Install root deps
        run: |
          cd artifacts
          if [ -f package.json ]; then
            npm install --omit=dev
          fi

      # Install runtime deps for express-ingest (axios, storage libs) and build TS if present
      - name: Install & build express-ingest deps
        run: |
          if [ -f artifacts/express-ingest/package.json ]; then
            cd artifacts/express-ingest
            npm install --omit=dev
            if [ -f tsconfig.json ]; then npx tsc -p tsconfig.json || true; fi
            cd -
          fi

      # Zip EXACTLY the contents that should become /home/site/wwwroot/*
      - name: Create deploy.zip
        run: |
          cd artifacts
          zip -r ../deploy.zip . -x "**/.git/**" "**/.cache/**" "**/node_modules/.cache/**"
          cd -

      - name: Deploy to Azure WebApp (ingest)
        uses: azure/webapps-deploy@v3
        with:
          app-name: canadawill-ingest
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: deploy.zip
